#! /usr/bin/env python3
""" docstring """

import argparse
import os
import sys
import numpy as np
import matplotlib

matplotlib.use("Agg")
import matplotlib.pyplot as plt
import seaborn as sns

import dcatools as tools

sns.set(rc={"figure.figsize": (10, 7.5)})


def parse_options():
    """ cli parser """
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-i",
        "--input",
        dest="params",
        required=True,
        help="input parameters file",
    )
    return parser.parse_args()


def main():
    """ do stuff """
    options = parse_options()

    prefix = os.path.splitext((options.params).replace("/", "_"))[0]

    h, J = tools.load_model(options.params)

    Npos, Naa = np.shape(h)

    J_2d = tools.reduce_J(J, "fro")
    h_1d = tools.reduce_h(h)
    model = J_2d + np.transpose(J_2d)

    # Make plots
    with sns.axes_style("white"):
        ax = sns.heatmap(model + np.diag(h_1d), cmap="Blues", linewidths=0.2)
        fig = ax.get_figure()
        ax.xaxis.set_ticks_position("top")
        ax.yaxis.set_ticks_position("left")
        ax.set(xlabel="Position", ylabel="Position", title="J Parameters")
        plt.tight_layout()
        fig.savefig(prefix + "_heatmap.svg")
        plt.close()

    with sns.axes_style("white"):
        ax = sns.heatmap(model, cmap="Blues", linewidths=0.2)
        fig = ax.get_figure()
        ax.xaxis.set_ticks_position("top")
        ax.yaxis.set_ticks_position("left")
        ax.set(xlabel="Position", ylabel="Position", title="J Parameters")
        plt.tight_layout()
        fig.savefig(prefix + "_heatmap_no-h.svg")
        plt.close()

    ref = np.partition(J_2d.flatten(), round(-Npos / 2) - 1)[
        round(-Npos / 2) - 1
    ]
    model = model * (model > ref).astype(int)

    with sns.axes_style("white"):
        ax = sns.heatmap(model, cmap="Blues", linewidths=0.2)
        fig = ax.get_figure()
        ax.xaxis.set_ticks_position("top")
        ax.yaxis.set_ticks_position("left")
        ax.set(xlabel="Position", ylabel="Position", title="J Parameters")
        plt.tight_layout()
        fig.savefig(prefix + "_contacts.svg")
        plt.close()


if __name__ == "__main__":
    main()
